# Generated by Django 5.1.3 on 2025-05-15 17:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0036_delete_educationalcontent_delete_pomodorotimer"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True)),
                ("icon", models.ImageField(blank=True, upload_to="categories/")),
            ],
        ),
        migrations.CreateModel(
            name="UnitType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("symbol", models.CharField(max_length=10)),
            ],
        ),
        migrations.RenameField(
            model_name="achievement",
            old_name="title",
            new_name="name",
        ),
        migrations.RenameField(
            model_name="userachievement",
            old_name="unlocked",
            new_name="completed",
        ),
        migrations.RenameField(
            model_name="userachievement",
            old_name="unlocked_at",
            new_name="completed_at",
        ),
        migrations.RemoveField(
            model_name="task",
            name="created",
        ),
        migrations.AddField(
            model_name="achievement",
            name="bronze_requirement",
            field=models.IntegerField(default=10),
        ),
        migrations.AddField(
            model_name="achievement",
            name="diamond_requirement",
            field=models.IntegerField(default=1000),
        ),
        migrations.AddField(
            model_name="achievement",
            name="gold_requirement",
            field=models.IntegerField(default=100),
        ),
        migrations.AddField(
            model_name="achievement",
            name="platinum_requirement",
            field=models.IntegerField(default=500),
        ),
        migrations.AddField(
            model_name="achievement",
            name="silver_requirement",
            field=models.IntegerField(default=50),
        ),
        migrations.AddField(
            model_name="task",
            name="unit_amount",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="userachievement",
            name="current_progress",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="userachievement",
            name="current_tier",
            field=models.CharField(
                choices=[
                    ("BRONZE", "Bronze"),
                    ("SILVER", "Silver"),
                    ("GOLD", "Gold"),
                    ("PLATINUM", "Platinium"),
                    ("DIAMOND", "Diamond"),
                ],
                default="BRONZE",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="achievement",
            name="icon",
            field=models.ImageField(upload_to="achievements/"),
        ),
        migrations.AlterUniqueTogether(
            name="userachievement",
            unique_together={("user", "achievement")},
        ),
        migrations.AddField(
            model_name="achievement",
            name="category",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to="api.category",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.category",
            ),
        ),
        migrations.AddField(
            model_name="achievement",
            name="unit_type",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to="api.unittype",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="unit_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.unittype",
            ),
        ),
    ]
